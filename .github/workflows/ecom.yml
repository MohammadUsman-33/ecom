name: Build and Deploy to SmarterASP.net FTP

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1Ô∏è‚É£ Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # 2Ô∏è‚É£ Setup .NET 8.0
    - name: Setup .NET 8.0 SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0'

    # 3Ô∏è‚É£ Restore dependencies
    - name: Restore dependencies
      run: dotnet restore ecom.sln

    # 4Ô∏è‚É£ Build project
    - name: Build project
      run: dotnet build ecom.sln --configuration Release --no-restore

    # 5Ô∏è‚É£ Publish project to ./publish/
    - name: Publish project
      run: dotnet publish ecom/ecom.csproj --configuration Release --output ./publish/

    # 6Ô∏è‚É£ Create temporary maintenance page
    - name: Create maintenance page
      run: |
        mkdir -p app_offline
        echo '<html><body><h1>Maintenance Mode</h1><p>The site will be back shortly.</p></body></html>' > app_offline/app_offline.htm

    # 7Ô∏è‚É£ Upload maintenance page to take site offline
    - name: Upload maintenance page
      uses: SamKirkland/FTP-Deploy-Action@v4.3.6
      with:
        server: win1020.site4now.net
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./app_offline/
        server-dir: /ecom/

    # 8Ô∏è‚É£ Deploy published files
    - name: Deploy application files
      uses: SamKirkland/FTP-Deploy-Action@v4.3.6
      with:
        server: win1020.site4now.net
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./publish/
        server-dir: /ecom/
        dangerous-clean-slate: false  # safer incremental deploy

    # 9Ô∏è‚É£ Remove maintenance page (bring site back online)
    - name: Remove maintenance page safely
      run: |
        echo "Removing app_offline.htm to bring site online..."
        curl -u ${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }} ftp://win1020.site4now.net/ecom/app_offline.htm -Q "-DELE app_offline.htm" || true

    # üîü Verify site is online
    - name: Verify site is online
      run: |
        echo "Checking if site is live..."
        RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://musman33-001-site1.rtempurl.com/)
        if [ "$RESPONSE" -ne 200 ]; then
          echo "Site check failed! HTTP code: $RESPONSE"
          exit 1
        else
          echo "Site is live! HTTP code: $RESPONSE"
        fi
